# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è Multi-Parameter Data Analyzer v2.0
–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–æ–¥—É–ª—å–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é –≤—Ä–µ–º–µ–Ω–Ω—É—é —à–∫–∞–ª—É
"""

print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Multi-Parameter Data Analyzer v2.0 ===")

try:
    print("1. –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π...")
    from utils.file_utils import FileUtils
    from core.timeline_manager_v2 import TimelineManager
    from core.data_manager import DataManager
    print("   ‚úÖ –ú–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")

    print("2. –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞...")
    df = FileUtils.load_data_file('test.xlsx')
    print(f"   ‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: {len(df)} —Å—Ç—Ä–æ–∫, {len(df.columns)} —Å—Ç–æ–ª–±—Ü–æ–≤")

    print("3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤...")
    data_manager = DataManager()
    timeline_manager = TimelineManager()
    print("   ‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä—ã —Å–æ–∑–¥–∞–Ω—ã")

    print("4. –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö...")
    data_manager.set_dataframe(df)
    time_columns = data_manager.get_time_candidates()
    numeric_columns = data_manager.get_numeric_columns()
    print(f"   ‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫: {len(time_columns)}")
    print(f"   ‚úÖ –ß–∏—Å–ª–æ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {len(numeric_columns)}")
    
    for i, col in enumerate(time_columns[:3], 1):
        print(f"   {i}. –í—Ä–µ–º—è: {col}")
    if len(time_columns) > 3:
        print(f"   ... –∏ –µ—â–µ {len(time_columns) - 3} –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫")

    print("5. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–∞—Ä –≤—Ä–µ–º—è + –ø–∞—Ä–∞–º–µ—Ç—Ä...")
    pairs = timeline_manager.auto_detect_pairs(df)
    print(f"   ‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –ø–∞—Ä: {len(pairs)}")
    for i, (time_col, param_col) in enumerate(pairs[:3], 1):
        print(f"   {i}. {time_col} -> {param_col}")
    if len(pairs) > 3:
        print(f"   ... –∏ –µ—â–µ {len(pairs) - 3} –ø–∞—Ä")

    print("6. –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π —à–∫–∞–ª—ã...")
    timeline = timeline_manager.create_universal_timeline(df, step_seconds=60.0)
    print(f"   ‚úÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è —à–∫–∞–ª–∞ —Å–æ–∑–¥–∞–Ω–∞: {len(timeline)} —Ç–æ—á–µ–∫")
    print(f"   –ü–µ—Ä–∏–æ–¥: {timeline.min()} –¥–æ {timeline.max()}")

    print("7. –¢–µ—Å—Ç–æ–≤–∞—è –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è (–ø–µ—Ä–≤—ã–µ 2 –ø–∞—Ä—ã)...")
    if len(pairs) >= 2:
        test_pairs = pairs[:2]
        interpolated = timeline_manager.interpolate_parameters(df, test_pairs)
        print(f"   ‚úÖ –ò–Ω—Ç–µ—Ä–ø–æ–ª–∏—Ä–æ–≤–∞–Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {len(interpolated)}")
        
        for param_name in interpolated:
            values = interpolated[param_name]
            non_nan = values.dropna()
            if len(non_nan) > 0:
                print(f"   {param_name}: {len(non_nan)} –≤–∞–ª–∏–¥–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π, –¥–∏–∞–ø–∞–∑–æ–Ω {non_nan.min():.2f} - {non_nan.max():.2f}")
            else:
                print(f"   {param_name}: –Ω–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–∏")
    else:
        print("   ‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–∏")

    print("8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–æ—Å—Å-—Å—Å—ã–ª–æ–∫ –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏...")
    from core.plot_manager import PlotManager
    from config.settings import Settings
    plot_manager = PlotManager()
    settings = Settings()
    print("   ‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")

    print()
    print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
    print("Multi-Parameter Data Analyzer v2.0 –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    print("=" * 60)

except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
    print()
    print("‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏")
